defaults: &defaults
  working_directory: ~/app
  docker:
  - image: circleci/node:10.15.0-browsers

deploy_container_config: &deploy_container_config
  docker:
  - image: 926803513772.dkr.ecr.eu-west-1.amazonaws.com/cloud-platform/tools:circleci
    environment:
      GITHUB_TEAM_NAME_SLUG: probation-services

install_aws_cli: &install_aws_cli
  run:
    name: Set up aws
    command: |
      sudo apt-get --assume-yes install python3-pip
      sudo pip3 install awscli
      $(aws ecr get-login --region eu-west-1 --no-include-email)

version: 2
jobs:
  build:
    <<: *defaults
    steps:
    - checkout
    - run:
        name: Update npm
        command: 'sudo npm install -g npm@latest'
    - restore_cache:
        key: dependency-cache-{{ checksum "package.json" }}
    - run:
        name: Install Dependencies
        command: npm install
    - save_cache:
        key: dependency-cache-{{ checksum "package.json" }}
        paths:
        - node_modules
    - persist_to_workspace:
        root: .
        paths:
        - node_modules

  push_to_ecs:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - setup_remote_docker:
          docker_layer_caching: true
      - *install_aws_cli
      - run:
          name: publish image to ecs
          command: |
            login="$(aws ecr get-login --region eu-west-1 --no-include-email)"
            ${login}
            docker build -t 926803513772.dkr.ecr.eu-west-1.amazonaws.com/probation-services/court-probation:${CIRCLE_BUILD_NUM} .
            docker tag 926803513772.dkr.ecr.eu-west-1.amazonaws.com/probation-services/court-probation:${CIRCLE_BUILD_NUM} 926803513772.dkr.ecr.eu-west-1.amazonaws.com/probation-services/court-probation:latest
            docker push "926803513772.dkr.ecr.eu-west-1.amazonaws.com/probation-services/court-probation:latest"
            docker push "926803513772.dkr.ecr.eu-west-1.amazonaws.com/probation-services/court-probation:${CIRCLE_BUILD_NUM}"

  deploy_dev:
    <<: *deploy_container_config
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - attach_workspace:
        at: ~/app
    - run:
        name: Kubectl deployment dev setup
        command: |
          $(aws ecr get-login --region eu-west-1 --no-include-email)
          setup-kube-auth
          kubectl config use-context dev
    - deploy:
        name: Deploy to dev
        command: |
          kubectl set image -f ./deploy/deployment.yaml categorisation-tool=926803513772.dkr.ecr.eu-west-1.amazonaws.com/probation-services/court-probation:${CIRCLE_BUILD_NUM} --local -o yaml \
          | kubectl apply -f -
          kubectl apply \
            -f ./deploy/ingress.yaml \
            -f ./deploy/service.yaml

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - push_to_ecs:
          requires:
          - build
          filters:
            branches:
              only: master
      - deploy_dev:
          requires:
          - push_to_ecs
